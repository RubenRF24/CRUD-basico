/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplicacion;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS VIVOBOOK
 */
public class Persona extends javax.swing.JFrame {
    public static final String URL= "jdbc:mysql://127.0.0.1/escuela?autoReconnect=true&useSSL=false";
    public static final String usuario= "root";
    public static final String contraseña= "";
    PreparedStatement ps;
    ResultSet rs;

    /**
     * Creates new form Persona
     */
    public Persona() {
        initComponents();
        campoID.setVisible(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        botonBuscar = new javax.swing.JButton();
        campoBuscarClave = new javax.swing.JTextField();
        campoID = new javax.swing.JTextField();
        labelClave = new javax.swing.JLabel();
        labelDomicilio = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelCelular = new javax.swing.JLabel();
        labelEmail = new javax.swing.JLabel();
        labelFechaNacimiento = new javax.swing.JLabel();
        labelGenero = new javax.swing.JLabel();
        campoDomicilio = new javax.swing.JTextField();
        campoClave = new javax.swing.JTextField();
        campoCelular = new javax.swing.JTextField();
        campoNombre = new javax.swing.JTextField();
        campoEmail = new javax.swing.JTextField();
        campoFechaNacimiento = new javax.swing.JTextField();
        comboBoxGenero = new javax.swing.JComboBox<>();
        botonModificar = new javax.swing.JButton();
        botonInsertar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        campoBuscarClave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        campoID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        labelClave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelClave.setText("Clave:");

        labelDomicilio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelDomicilio.setText("Domicilio:");

        labelNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelNombre.setText("Nombre:");

        labelCelular.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelCelular.setText("Celular:");

        labelEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelEmail.setText("Correo electronico:");

        labelFechaNacimiento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelFechaNacimiento.setText("Fecha nacimiento:");

        labelGenero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelGenero.setText("Género:");

        campoDomicilio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        campoClave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        campoCelular.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        campoNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        campoEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        campoFechaNacimiento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        comboBoxGenero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboBoxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Masculino", "Femenino" }));

        botonModificar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonInsertar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botonInsertar.setText("Insertar");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });

        botonEliminar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonLimpiar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botonLimpiar.setText("Limpiar");
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campoBuscarClave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoID)
                            .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelDomicilio, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                    .addComponent(labelNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelClave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelCelular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoCelular)
                                    .addComponent(campoDomicilio)
                                    .addComponent(campoNombre)
                                    .addComponent(campoClave)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(botonInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(labelGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoEmail)
                                    .addComponent(campoFechaNacimiento))))))
                .addGap(20, 20, 20))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscar)
                    .addComponent(campoBuscarClave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelClave)
                    .addComponent(campoClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNombre)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDomicilio))
                .addGap(12, 12, 12)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCelular)
                    .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmail)
                    .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFechaNacimiento)
                    .addComponent(campoFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGenero)
                    .addComponent(comboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonModificar)
                    .addComponent(botonInsertar)
                    .addComponent(botonEliminar)
                    .addComponent(botonLimpiar))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
      Connection conexion = null;
       
       try{
           conexion= getConnection();
           ps = (PreparedStatement) conexion.prepareStatement("delete from tbl_persona where idPersona=?");
           ps.setInt(1, Integer.parseInt(campoID.getText()));
           
           int resultado = ps.executeUpdate(); //Ejecutamos la eliminacion
           
           if(resultado>0){
               JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
               limpiarCampos();
           }
           else{
               JOptionPane.showMessageDialog(null, "Error al eliminar el registro");
               limpiarCampos();
           }
           
           conexion.close();
           
       }catch(Exception ex){
           System.err.println("Error, "+ex);
       }
         
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
       Connection conexion = null;
       
       try{
           conexion= getConnection();
           ps = (PreparedStatement) conexion.prepareStatement("insert into tbl_persona (clave,nombre,domicilio,celular,correo_electronico,fecha_nacimiento,genero) values (?,?,?,?,?,?,?)");
           ps.setString(1, campoClave.getText());
           ps.setString(2, campoNombre.getText());
           ps.setString(3, campoDomicilio.getText());
           ps.setString(4, campoCelular.getText());
           ps.setString(5, campoEmail.getText());
           ps.setDate(6, Date.valueOf(campoFechaNacimiento.getText()));
           ps.setString(7, comboBoxGenero.getSelectedItem().toString());
           
           int resultado = ps.executeUpdate(); //Ejecutamos la insercion dentro de la base de datos
           
           if(resultado>0){
               JOptionPane.showMessageDialog(null, "Registro insertado correctamente");
               limpiarCampos();
           }
           else{
               JOptionPane.showMessageDialog(null, "Error al insertar el registro");
               limpiarCampos();
           }
           
           conexion.close();
           
       }catch(Exception ex){
           System.err.println("Error, "+ex);
       }
       
    }//GEN-LAST:event_botonInsertarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        Connection conexion= null;
        
        try{
            conexion = getConnection();
            ps = (PreparedStatement) conexion.prepareStatement("select * from tbl_persona where clave=?");
            ps.setString(1, campoBuscarClave.getText());
            rs = ps.executeQuery();
            
            if(rs.next()){
                campoClave.setText(rs.getString("clave"));
                campoCelular.setText(rs.getString("celular"));
                campoDomicilio.setText(rs.getString("domicilio"));
                campoEmail.setText(rs.getString("correo_electronico"));
                campoFechaNacimiento.setText(String.valueOf(rs.getString("fecha_nacimiento")));
                campoID.setText(rs.getString("idPersona"));
                campoNombre.setText(rs.getString("nombre"));
                comboBoxGenero.setSelectedItem(rs.getString("genero"));
            }
            else{
                JOptionPane.showMessageDialog(null, "No existe una persona con esa clave");
            }
            
            conexion.close();
            
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
           Connection conexion = null;
       
       try{
           conexion= getConnection();
           ps = (PreparedStatement) conexion.prepareStatement("update tbl_persona set clave=?,nombre=?,domicilio=?,celular=?,correo_electronico=?,fecha_nacimiento=?,genero=? where idPersona=?");
           ps.setString(1, campoClave.getText());
           ps.setString(2, campoNombre.getText());
           ps.setString(3, campoDomicilio.getText());
           ps.setString(4, campoCelular.getText());
           ps.setString(5, campoEmail.getText());
           ps.setDate(6, Date.valueOf(campoFechaNacimiento.getText()));
           ps.setString(7, comboBoxGenero.getSelectedItem().toString());
           ps.setInt(8, Integer.parseInt(campoID.getText()));
           
           int resultado = ps.executeUpdate(); //Ejecutamos la modificacion
           
           if(resultado>0){
               JOptionPane.showMessageDialog(null, "Registro modificado correctamente");
               limpiarCampos();
           }
           else{
               JOptionPane.showMessageDialog(null, "Error al modificar el registro");
               limpiarCampos();
           }
           
           conexion.close();
           
       }catch(Exception ex){
           System.err.println("Error, "+ex);
       }
    }//GEN-LAST:event_botonModificarActionPerformed

    public Connection getConnection(){
        Connection conexion= null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conexion= (Connection) DriverManager.getConnection(URL,usuario,contraseña);
            //JOptionPane.showMessageDialog(null, "Conexion Exitosa");
            
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
        
        return conexion;
    }
    
    public void limpiarCampos(){
        campoBuscarClave.setText(null);
        campoCelular.setText(null);
        campoClave.setText(null);
        campoDomicilio.setText(null);
        campoEmail.setText(null);
        campoFechaNacimiento.setText(null);
        campoNombre.setText(null);
        comboBoxGenero.setSelectedIndex(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Persona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonInsertar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JTextField campoBuscarClave;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoClave;
    private javax.swing.JTextField campoDomicilio;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoFechaNacimiento;
    private javax.swing.JTextField campoID;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JComboBox<String> comboBoxGenero;
    private javax.swing.JLabel labelCelular;
    private javax.swing.JLabel labelClave;
    private javax.swing.JLabel labelDomicilio;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelFechaNacimiento;
    private javax.swing.JLabel labelGenero;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
